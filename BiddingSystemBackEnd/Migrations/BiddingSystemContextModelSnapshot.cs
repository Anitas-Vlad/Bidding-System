// <auto-generated />
using System;
using BiddingSystem.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BiddingSystem.Migrations
{
    [DbContext(typeof(BiddingSystemContext))]
    partial class BiddingSystemContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.15")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BiddingSystem.Models.Auction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<double>("CurrentPrice")
                        .HasColumnType("float");

                    b.Property<DateTime>("EndOfAuction")
                        .HasColumnType("datetime2");

                    b.Property<int>("ItemId")
                        .HasColumnType("int");

                    b.Property<double>("MinimumBidIncrement")
                        .HasColumnType("float");

                    b.Property<int>("SellerId")
                        .HasColumnType("int");

                    b.Property<double>("StartingPrice")
                        .HasColumnType("float");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("WinningBidId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ItemId");

                    b.HasIndex("UserId");

                    b.ToTable("Auctions");
                });

            modelBuilder.Entity("BiddingSystem.Models.Bid", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<double>("Amount")
                        .HasColumnType("float");

                    b.Property<int>("AuctionId")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AuctionId");

                    b.HasIndex("UserId");

                    b.ToTable("Bids");

                    b.HasData(
                        new
                        {
                            Id = 1000,
                            Amount = 120.0,
                            AuctionId = 1000,
                            Status = 0,
                            UserId = 1001
                        },
                        new
                        {
                            Id = 1001,
                            Amount = 170.0,
                            AuctionId = 1001,
                            Status = 0,
                            UserId = 1003
                        },
                        new
                        {
                            Id = 1002,
                            Amount = 220.0,
                            AuctionId = 1002,
                            Status = 0,
                            UserId = 1002
                        },
                        new
                        {
                            Id = 1003,
                            Amount = 100.0,
                            AuctionId = 1002,
                            Status = 0,
                            UserId = 1001
                        });
                });

            modelBuilder.Entity("BiddingSystem.Models.Item", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("AvailableForAuction")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OwnerId")
                        .HasColumnType("int");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Items");

                    b.HasData(
                        new
                        {
                            Id = 1000,
                            AvailableForAuction = false,
                            Name = "Napoleon's Favorite Hat",
                            OwnerId = 1000
                        },
                        new
                        {
                            Id = 1001,
                            AvailableForAuction = false,
                            Name = "McDonald's Forever Free Nuggets",
                            OwnerId = 1000
                        },
                        new
                        {
                            Id = 1002,
                            AvailableForAuction = false,
                            Name = "Eiffel Tower Top Light",
                            OwnerId = 1000
                        },
                        new
                        {
                            Id = 1003,
                            AvailableForAuction = true,
                            Name = "Test Item 1",
                            OwnerId = 1000
                        },
                        new
                        {
                            Id = 1004,
                            AvailableForAuction = true,
                            Name = "Test Item 2",
                            OwnerId = 1000
                        },
                        new
                        {
                            Id = 1005,
                            AvailableForAuction = true,
                            Name = "Test Item 3",
                            OwnerId = 1000
                        });
                });

            modelBuilder.Entity("BiddingSystem.Models.Notification", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsSeen")
                        .HasColumnType("bit");

                    b.Property<DateTime>("Time")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Notifications");
                });

            modelBuilder.Entity("BiddingSystem.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<double>("Credit")
                        .HasColumnType("float");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("FrozenCredit")
                        .HasColumnType("float");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1000,
                            Credit = 500.0,
                            Email = "seller1@gmail.com",
                            FrozenCredit = 0.0,
                            PasswordHash = "$2a$11$CyOm1jdQUtxXMl20TJFF8.YA29Zsb8Zutz.gAk.pMwAJ0YsaLvK4C",
                            Username = "Seller 1"
                        },
                        new
                        {
                            Id = 1001,
                            Credit = 5000.0,
                            Email = "buyer1@gmail.com",
                            FrozenCredit = 220.0,
                            PasswordHash = "$2a$11$CAEU/gnjMcbRWtkagedmA.ZbbgZlYqIcivLUr/IPvOc/3zTn9M2qy",
                            Username = "Buyer 1"
                        },
                        new
                        {
                            Id = 1002,
                            Credit = 10000.0,
                            Email = "buyer2@gmail.com",
                            FrozenCredit = 220.0,
                            PasswordHash = "$2a$11$8Jta5ryZbYShl.XO2CL4ieeWlMYoZaFKuLWZgCI12gq6fk93pqxAW",
                            Username = "Buyer 2"
                        },
                        new
                        {
                            Id = 1003,
                            Credit = 1500.0,
                            Email = "buyer3@gmail.com",
                            FrozenCredit = 170.0,
                            PasswordHash = "$2a$11$y7tnRbi1m/DvhdxVtni.pO5fXWqiO.JPAwpEPuX2S61Y8r7OVbbuK",
                            Username = "Buyer 3"
                        },
                        new
                        {
                            Id = 1004,
                            Credit = 0.0,
                            Email = "owner@gmail.com",
                            FrozenCredit = 0.0,
                            PasswordHash = "$2a$11$/MLvxBRbwj6g.67xXyS0hem9SQTFncyoPA/8DTvVA0kpaKhF7axLm",
                            Username = "Owner"
                        });
                });

            modelBuilder.Entity("BiddingSystem.Models.Auction", b =>
                {
                    b.HasOne("BiddingSystem.Models.Item", "Item")
                        .WithMany()
                        .HasForeignKey("ItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BiddingSystem.Models.User", null)
                        .WithMany("Auctions")
                        .HasForeignKey("UserId");

                    b.Navigation("Item");
                });

            modelBuilder.Entity("BiddingSystem.Models.Bid", b =>
                {
                    b.HasOne("BiddingSystem.Models.Auction", null)
                        .WithMany("Bids")
                        .HasForeignKey("AuctionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BiddingSystem.Models.User", null)
                        .WithMany("Bids")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("BiddingSystem.Models.Item", b =>
                {
                    b.HasOne("BiddingSystem.Models.User", null)
                        .WithMany("Items")
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("BiddingSystem.Models.Notification", b =>
                {
                    b.HasOne("BiddingSystem.Models.User", null)
                        .WithMany("Notifications")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("BiddingSystem.Models.Auction", b =>
                {
                    b.Navigation("Bids");
                });

            modelBuilder.Entity("BiddingSystem.Models.User", b =>
                {
                    b.Navigation("Auctions");

                    b.Navigation("Bids");

                    b.Navigation("Items");

                    b.Navigation("Notifications");
                });
#pragma warning restore 612, 618
        }
    }
}
