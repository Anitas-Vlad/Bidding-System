TODO : 
* Users have : amount of money in account. They can add more if needed.
    ===> You can only bid for something you can afford.
* Add a property for Bidding : Bidding.IsActive. This way you can create a bidding and TODO Snipe.
* Create class UserValidator (IsEmailValid / IsPasswordValid / etc...)
* Unfreeze User.Credit when canceling a bidding.
* Seed data with Auctions

* Users can create Auctions. 
* When an auction closes and there is a winner, The FrozenCredit goes into the Account of the seller.
* The seller is taxed a percentage by the AuctionWebsite.

MUST : 
* Authorisation 

DONE : 
* appsettings.json stuff.
* Users : Login, Register
* Add ItemService where you handle changes related to Items.
* In BiddingService Validate : CreateBidding :
* Find out why and fix PlaceBidding
* Cancel Bidding.
* Minimum Bid Increment
* When placing another bidding, you check the user's money and the previous bidding amount if it's enough. CheckIfHasEnough(amount){return amount<previousBidding+Added(IF THE USER HAS ENOUGH TO BID MORE.)}
* Freeze money so the user can't use too much.
* NeededAmount = NewAmount - OldAmount ===> Money MUST= NeededAmount => Bidding.amount += NeededAmount 
* Create Migration
